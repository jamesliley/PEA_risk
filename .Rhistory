cat("\n\n","Permutation test comparing area-under-ROC curve using model-derived predictions and using surgeon-derived predictions\n")
print(roc.test(rv,rvc))
## AUCs, standard errors and confidence intervals
auc_mod=rv$auc
se_mod=aucse(sum(Yv),sum(1-Yv),rv$auc)
ci_mod=auc_mod - qnorm(0.05/2)*se_mod*c(-1,1)
auc_surg=rvc$auc
se_surg=aucse(sum(Yv),sum(1-Yv),rvc$auc)
ci_surg=auc_surg - qnorm(0.05/2)*se_surg*c(-1,1)
##**********************************************************************
## Plot ROC and calibration curves                                  ####
##**********************************************************************
# ROC
pdf(paste0(outdir,"Plots/",prefix,"prospective_roc_surg_vs_mod.pdf"),width=4,height=4)
plot(0,type="n",xlim=c(0,1),ylim=c(0,1),
xlab="Specificity",ylab="Sensitivity")
abline(0,1,lty=2)
draw_roc(Ypv,Yv,add=T,col="black",lwd=2)
draw_roc(Yc,Yv,add=T,col="red",lwd=2)
legend("bottomright",
c(paste0("Model-derived: ",signif(auc_mod,digits=2),
" (",signif(ci_mod[1],digits=2),", ", signif(ci_mod[2],digits=2),")"),
paste0("Surgeon-predicted: ",signif(auc_surg,digits=2),
" (",signif(ci_surg[1],digits=2),", ", signif(ci_surg[2],digits=2),")")),
col=c("black","red"),lwd=2,bty="n",cex=0.5)
dev.off()
# Calibration
pdf(paste0(outdir,"Plots/prospective_calibration_surg_vs_mod.pdf"),width=4,height=4)
plot(0,type="n",xlim=c(0,0.5),ylim=c(0,1.1),xlab="Predicted risk",ylab="Observed risk",xaxs="i",yaxs="i")
abline(0,1)
draw_calibration(Ypv,Yv,nc=20,type="l",add=T,col="black",lwd=2)
draw_calibration(Yc/100,Yv,nc=20,type="l",add=T,col="red",lwd=2)
legend("topright",c("Model_derived","Surgeon-predicted"),lwd=2,col=c("black","red"),cex=0.5)
dev.off()
sink()
##**********************************************************************
## Save image                                                       ####
##**********************************************************************
save.image(file=paste0(datadir,"Temp_data/Workspaces/prospective.RData"))
debugSource("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
length(Yv)
sink()
length(Yv)
sum(Yv)
ds2=(as.Date(vtab$death_date_update,format="%d/%m/%Y") - as.Date(vtab$pea_date,format="%d/%m/%Y"))
ds2[which(!is.finite(ds2))]=500
Yv2=(ds2<35)
roc(Yv,Ypv)
roc(Yv2,Ypv)
class(Yv)
class(Yv2)
table(Yv2)
dim(Yv2)
Yv2=(ds2<35)
sum(Yv2)
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
##**********************************************************************
## Set data and output directories                                  ####
##**********************************************************************
## Data location
datadir="../../Data/"
# Output location
outdir="Outputs/"
##**********************************************************************
## Packages and scripts                                             ####
##**********************************************************************
library(glmnet)
library(randomForest)
library(pROC)
source("Code/auxiliary.R") # Auxiliary functions
outfile=paste0(outdir,"summary_prospective.txt")
sink(outfile)
##**********************************************************************
## 3. PROSPECTIVE VALIDATION                                        ####
## Read datasets                                                    ####
##**********************************************************************
# Prospective data
load(paste0(datadir,"Temp_data/Design/prospective_table.RData"))
vtab0=vtab
# Discovery
load(paste0(datadir,"Temp_data/Workspaces/discovery.RData"))
##**********************************************************************
## Sample size calculation setup                                    ####
##**********************************************************************
# Training data
Y=YDM
train_dat=cbind(Xall,Y=as.factor(Y))
nrs=c(50,500) # Maximum and minimum sizes to test
nsim=100 # Simulate this many times
# Store simulation data in a list
sim_data=list()
sink()
sink()
debugSource("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
vtab$death_date_update[1:10]
sink()
vtab$death_date_update[1:10]
debugSource("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
roc(Yv,Ypv)
sink()
roc(Yv,Ypv)
roc(Yv2,Ypv)
sum(Yv2)
table(Yv,Yv2)
length(which(Yv==TRUE & Yv2==FALSE))
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
##**********************************************************************
## Set data and output directories                                  ####
##**********************************************************************
## Data location
datadir="../../Data/"
# Output location
outdir="Outputs/"
##**********************************************************************
## Packages and scripts                                             ####
##**********************************************************************
library(glmnet)
library(randomForest)
library(pROC)
source("Code/auxiliary.R") # Auxiliary functions
outfile=paste0(outdir,"summary_prospective.txt")
##**********************************************************************
## 3. PROSPECTIVE VALIDATION                                        ####
## Read datasets                                                    ####
##**********************************************************************
# Prospective data
load(paste0(datadir,"Temp_data/Design/prospective_table.RData"))
vtab0=vtab
# Discovery
load(paste0(datadir,"Temp_data/Workspaces/discovery.RData"))
dim(vtab)
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
sum(Yv)
vtabx <<- vtab
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
##**********************************************************************
##  Risk prediction in PEA                                          ####
##  Supporting code to analyse prospective data table
##  James Liley
##  05/10/2022
##**********************************************************************
##**********************************************************************
## Set data and output directories                                  ####
##**********************************************************************
## Data location
datadir="../../Data/"
# Output location
outdir="Outputs/"
##**********************************************************************
## Packages and scripts                                             ####
##**********************************************************************
library(glmnet)
library(randomForest)
library(pROC)
source("Code/auxiliary.R") # Auxiliary functions
# Prospective data
load(paste0(datadir,"Temp_data/Design/prospective_table.RData"))
vtab0=vtab
vtab_original<<- vtab
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
##**********************************************************************
##  Risk prediction in PEA                                          ####
##  Supporting code to analyse prospective data table
##  James Liley
##  05/10/2022
##**********************************************************************
##**********************************************************************
## Set data and output directories                                  ####
##**********************************************************************
## Data location
datadir="../../Data/"
# Output location
outdir="Outputs/"
##**********************************************************************
## Packages and scripts                                             ####
##**********************************************************************
library(glmnet)
library(randomForest)
library(pROC)
source("Code/auxiliary.R") # Auxiliary functions
# Prospective data
load(paste0(datadir,"Temp_data/Design/prospective_table.RData"))
vtab0=vtab
vtab_new<<- vtab
dim(vtab_new)
dim(vtab_original)
vtab_new$id[1:10]
unique(vtab_new$id)
length(unique(vtab_new$id))
length(vtab_new$id)
length(which(is.na(vtab_new$id)))
length(duplicated(vtab_new$id))
sum(duplicated(vtab_new$id))
which(duplicated(vtab_new$id))
vtab_new$id[37]
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
##**********************************************************************
##  Risk prediction in PEA                                          ####
##  Supporting code to analyse prospective data table
##  James Liley
##  05/10/2022
##**********************************************************************
##**********************************************************************
## Set data and output directories                                  ####
##**********************************************************************
## Data location
datadir="../../Data/"
# Output location
outdir="Outputs/"
##**********************************************************************
## Packages and scripts                                             ####
##**********************************************************************
library(glmnet)
library(randomForest)
library(pROC)
source("Code/auxiliary.R") # Auxiliary functions
# Prospective data
load(paste0(datadir,"Temp_data/Design/prospective_table.RData"))
vtab0=vtab
vtab_new<<- vtab
dim(vtab)
vtab_new$pea_date[1:10]
vtab_original$pea_date[1:10]
length(which(vtab_new$pea_date==vtab_original$pea_date))
length(which(vtab_new$pea_date!=vtab_original$pea_date))
dim(vtab)
dim(vtab_original)
vtab_original$iid=paste0(vtab_original$age_pea,"_",vtab_original$bsa,"_",vtab_original$body_mass_index)
length(unique(vtab_original$iid))
ix=vtab_original$iid
ix[which(duplicated(ix))][1:10]
vtab_original$iid=paste0(vtab_original$age_pea,"_",vtab_original$bsa,"_",vtab_original$BMI)
length(unique(vtab_original$iid))
ix=vtab_original$iid
ix[which(duplicated(ix))][1:10]
vtab_original$iid=paste0(vtab_original$age_pea,"_",vtab_original$bsa,"_",vtab_original$BMI,"_",vtab_original$centre)
ix=vtab_original$iid
ix[which(duplicated(ix))][1:10]
length(unique(ix))
vtab_original=read.csv("../../Data/Original/Prospective/pea_prospective_final_anon.csv")
vtab_new=read.csv("../../Data/Original/Prospective/pea_prospective_final_mortalityupdate_anon.csv")
vtab_original$iid=paste0(vtab_original$age_pea,"_",
vtab_original$bsa,"_",
vtab_original$BMI,"_",
vtab_original$centre)
vtab_original=read.csv("../../Data/Original/Prospective/pea_prospective_final_anon.csv")
vtab_new=read.csv("../../Data/Original/Prospective/pea_prospective_final_mortalityupdate_anon.csv")
vtab_original$iid=paste0(vtab_original$age_pea,"_",
vtab_original$body_surface_area,"_",
vtab_original$body_mass_index,"_",
vtab_original$centre)
vtab_new$iid=paste0(vtab_new$age_pea,"_",
vtab_new$body_surface_area,"_",
vtab_new$body_mass_index,"_",
vtab_new$centre)
length(unique(vtab_original$iid))
i1=vtab_original$iid
i2=vtab_new$iid
length(unique(i1))
setdiff(i1,i2)
setdiff(i2,i1)
vtab_original=read.csv("../../Data/Original/Prospective/pea_prospective_final_anon.csv")
vtab_new=read.csv("../../Data/Original/Prospective/pea_prospective_final_mortalityupdate_anon.csv")
vtab_original$iid=paste0(vtab_original$age_pea,"_",
vtab_original$body_surface_area,"_",
vtab_original$body_mass_index,"_",
vtab_original$centre)
vtab_new$iid=paste0(vtab_new$age_pea,"_",
vtab_new$body_surface_area,"_",
vtab_new$body_mass_index,"_",
vtab_new$centre)
i1=vtab_original$iid
i2=vtab_new$iid
vtab_original$death_date_update=vtab_new$death_date_update[match(i1,i2)]
s=which(!is.na(vtab_original$Death_date))
vtab_original[s,c("Death_date","death_date_update")]
vtab_original$Death_date[s][1]
as.Date(vtab_original$Death_date[s][1])
vtab_original=read.csv("../../Data/Original/Prospective/pea_prospective_final_anon.csv")
vtab_new=read.csv("../../Data/Original/Prospective/pea_prospective_final_mortalityupdate_anon.csv")
vtab_original$iid=paste0(vtab_original$age_pea,"_",
vtab_original$body_surface_area,"_",
vtab_original$body_mass_index,"_",
vtab_original$centre)
vtab_new$iid=paste0(vtab_new$age_pea,"_",
vtab_new$body_surface_area,"_",
vtab_new$body_mass_index,"_",
vtab_new$centre)
i1=vtab_original$iid
i2=vtab_new$iid
dd2=vtab_new$death_date_update[match(i1,i2)]
dd3=rep(NA,dim(vtab_original)[1])
for (i in 1:dim(vtab_original)[1]) {
d1=vtab_original$Death_date[i]
d2=dd2[i]
d1d=as.Date(d1,format="%d/%m/%Y")
d2d=as.Date(d2,format="%d/%m/%Y")
if (is.na(d1) & !is.na(d2)) dd3[i]=d2
if (!is.na(d1) & is.na(d2)) dd3[i]=d1
if (!is.na(d1) & !is.na(d2)) {
if (d1d<d2d) dd3[i]=d1 else dd3[i]=d2
}
}
vtab_original$death_date_update=dd3
s=which(!is.na(vtab_original$Death_date))
vtab_original[s,c("Death_date","death_date_update")]
vtab_original=read.csv("../../Data/Original/Prospective/pea_prospective_final_anon.csv")
vtab_new=read.csv("../../Data/Original/Prospective/pea_prospective_final_mortalityupdate_anon.csv")
vtab_original$iid=paste0(vtab_original$age_pea,"_",
vtab_original$body_surface_area,"_",
vtab_original$body_mass_index,"_",
vtab_original$centre)
vtab_new$iid=paste0(vtab_new$age_pea,"_",
vtab_new$body_surface_area,"_",
vtab_new$body_mass_index,"_",
vtab_new$centre)
i1=vtab_original$iid
i2=vtab_new$iid
dd2=vtab_new$death_date_update[match(i1,i2)]
dd3=rep(NA,dim(vtab_original)[1])
for (i in 1:dim(vtab_original)[1]) {
d1=vtab_original$Death_date[i]
d2=dd2[i]
d1d=as.Date(d1,format="%d/%m/%Y")
d2d=as.Date(d2,format="%d/%m/%Y")
if (is.na(d1) & !is.na(d2)) dd3[i]=d2
if (!is.na(d1) & is.na(d2)) dd3[i]=d1
if (!is.na(d1) & !is.na(d2)) {
if (d1d<d2d) dd3[i]=d1 else dd3[i]=d2
}
}
vtab_original$death_date_update=dd3
s=which(!is.na(vtab_original$Death_date))
vtab_original[s,c("Death_date","death_date_update")]
vtab_original=vtab_original[,-c("iid")]
vtab_original=read.csv("../../Data/Original/Prospective/pea_prospective_final_anon.csv")
vtab_new=read.csv("../../Data/Original/Prospective/pea_prospective_final_mortalityupdate_anon.csv")
vtab_original$iid=paste0(vtab_original$age_pea,"_",
vtab_original$body_surface_area,"_",
vtab_original$body_mass_index,"_",
vtab_original$centre)
vtab_new$iid=paste0(vtab_new$age_pea,"_",
vtab_new$body_surface_area,"_",
vtab_new$body_mass_index,"_",
vtab_new$centre)
i1=vtab_original$iid
i2=vtab_new$iid
dd2=vtab_new$death_date_update[match(i1,i2)]
dd3=rep(NA,dim(vtab_original)[1])
for (i in 1:dim(vtab_original)[1]) {
d1=vtab_original$Death_date[i]
d2=dd2[i]
d1d=as.Date(d1,format="%d/%m/%Y")
d2d=as.Date(d2,format="%d/%m/%Y")
if (is.na(d1) & !is.na(d2)) dd3[i]=d2
if (!is.na(d1) & is.na(d2)) dd3[i]=d1
if (!is.na(d1) & !is.na(d2)) {
if (d1d<d2d) dd3[i]=d1 else dd3[i]=d2
}
}
vtab_original$death_date_update=dd3
s=which(!is.na(vtab_original$Death_date))
vtab_original[s,c("Death_date","death_date_update")]
vtab_original=vtab_original[,setdiff(colnames(vtab_original),"iid")]
write.csv(vtab_original,
file="../../Data/Original/Prospective/pea_prospective_update_anon.csv",
header=TRUE,quote=TRUE)
vtab_original=read.csv("../../Data/Original/Prospective/pea_prospective_final_anon.csv")
vtab_new=read.csv("../../Data/Original/Prospective/pea_prospective_final_mortalityupdate_anon.csv")
vtab_original$iid=paste0(vtab_original$age_pea,"_",
vtab_original$body_surface_area,"_",
vtab_original$body_mass_index,"_",
vtab_original$centre)
vtab_new$iid=paste0(vtab_new$age_pea,"_",
vtab_new$body_surface_area,"_",
vtab_new$body_mass_index,"_",
vtab_new$centre)
i1=vtab_original$iid
i2=vtab_new$iid
dd2=vtab_new$death_date_update[match(i1,i2)]
dd3=rep(NA,dim(vtab_original)[1])
for (i in 1:dim(vtab_original)[1]) {
d1=vtab_original$Death_date[i]
d2=dd2[i]
d1d=as.Date(d1,format="%d/%m/%Y")
d2d=as.Date(d2,format="%d/%m/%Y")
if (is.na(d1) & !is.na(d2)) dd3[i]=d2
if (!is.na(d1) & is.na(d2)) dd3[i]=d1
if (!is.na(d1) & !is.na(d2)) {
if (d1d<d2d) dd3[i]=d1 else dd3[i]=d2
}
}
vtab_original$death_date_update=dd3
s=which(!is.na(vtab_original$Death_date))
vtab_original[s,c("Death_date","death_date_update")]
vtab_original=vtab_original[,setdiff(colnames(vtab_original),"iid")]
write.csv(vtab_original,
file="../../Data/Original/Prospective/pea_prospective_update_anon.csv",
col.names=TRUE,row.names=FALSE,quote=TRUE)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
help(write.csv)
colnames(vtab_original)[10]
colnames(vtab_original)[11]
colnames(vtab_original)[9]
grepl(",",vtab_original[9])
grepl(",",vtab_original[8])
grepl(",",vtab_original[7])
vtab_original[7]
grepl(",",vtab_original[[7]])
any(grepl(",",vtab_original[[7]]))
any(grepl(",",vtab_original[[9]]))
source("~/.active-rstudio-document")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
length(ds2)
length(ds)
length(which(ds<35))
length(which(ds2<35))
length(which(ds!=ds2))
length(which(ds<ds))
length(which(ds<ds2))
length(which(ds>ds2))
plot(ds)
plot(ds,ds2)
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
source("~/.active-rstudio-document")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
sum(ds)
length(which(ds<35))
length(which(ds2<35))
source("~/.active-rstudio-document")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
source("~/.active-rstudio-document")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/process_raw_prospective.R")
source("~/Research/CTEPH/PEA_risk/Git/PEA_risk/Code/prospective_analysis.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
st0
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
st0
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
source("~/Personal/General/aRt/lsys.R")
